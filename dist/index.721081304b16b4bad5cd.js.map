{"version":3,"file":"index.721081304b16b4bad5cd.js","mappings":"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":["webpack://widget-panel/./src/App/index.tsx","webpack://widget-panel/./src/components/Column/index.tsx","webpack://widget-panel/./src/components/WeatherWidget/components/Body/index.tsx","webpack://widget-panel/./src/components/WeatherWidget/components/SettingsButton/index.tsx","webpack://widget-panel/./src/components/WeatherWidget/components/Settings/index.tsx","webpack://widget-panel/./src/components/WeatherWidget/hooks/useFetchWeather.tsx","webpack://widget-panel/./src/components/WeatherWidget/index.tsx","webpack://widget-panel/./src/index.tsx","webpack://widget-panel/./src/App/index.less?9dac","webpack://widget-panel/./src/components/Column/index.less?c209","webpack://widget-panel/./src/components/WeatherWidget/components/Body/index.less?3c10","webpack://widget-panel/./src/components/WeatherWidget/components/SettingsButton/index.less?0f8a","webpack://widget-panel/./src/components/WeatherWidget/components/Settings/index.less?7f5b","webpack://widget-panel/./src/components/WeatherWidget/index.less?26b0","webpack://widget-panel/./src/index.less?79ed","webpack://widget-panel/./src/components/WeatherWidget/assets/day/ lazy ^\\.\\/.*\\.png$ namespace object"],"sourcesContent":["import React, { useState, useRef, useReducer, useCallback, useMemo } from 'react';\r\nimport { DndContext, DragOverlay, useSensors, useSensor, PointerSensor } from '@dnd-kit/core';\r\nimport { ConfigProvider, notification, Row, Button } from 'antd';\r\nimport {\r\n    PlusOutlined\r\n} from '@ant-design/icons';\r\nimport ruRU from 'antd/locale/ru_RU';\r\nimport map from 'lodash/map';\r\nimport remove from 'lodash/remove';\r\nimport filter from 'lodash/filter';\r\nimport reduce from 'lodash/reduce';\r\nimport noop from 'lodash/noop';\r\nimport { DefaultOptionType } from 'antd/es/select';\r\nimport Column from '@/components/Column';\r\nimport WeatherWidget from '@/components/WeatherWidget';\r\nimport styles from './index.less';\r\n\r\n// добавить удаление виджета\r\n\r\ninterface IWidgetData {\r\n    id: number,\r\n    activeCityValue?: string | undefined,\r\n    isTempatureUnitC: boolean,\r\n    columnId: number,\r\n}\r\n\r\ninterface IWeaterWidgetHandlers {\r\n    setActiveCityValue(activeCityValue: string): void,\r\n    setIsTempatureUnitC(isTempatureUnitC: boolean): void,\r\n}\r\n\r\nfunction reducer(\r\n    state: IWidgetData[],\r\n    action: { type: 'setActiveCityValue', activeCityValue: string, id: number }\r\n        | { type: 'setIsTempatureUnitC', isTempatureUnitC: boolean, id: number }\r\n        | { type: 'setColimnId', columnId: number, id: number }\r\n        | { type: 'addNew', id: number, activeCityValue: string }\r\n): IWidgetData[] {\r\n    if (action.type === 'addNew') {\r\n        return [\r\n            ...state,\r\n            {\r\n                id: action.id,\r\n                isTempatureUnitC: true,\r\n                columnId: 1,\r\n                activeCityValue: action.activeCityValue,\r\n            }\r\n        ];\r\n    }\r\n\r\n    return map(state, widgetData => {\r\n        if (action.type === 'setActiveCityValue' && widgetData.id === action.id) {\r\n            return { ...widgetData, activeCityValue: action.activeCityValue }\r\n        }\r\n        if (action.type === 'setIsTempatureUnitC' && widgetData.id === action.id) {\r\n            return { ...widgetData, isTempatureUnitC: action.isTempatureUnitC }\r\n        }\r\n        if (action.type === 'setColimnId' && widgetData.id === action.id) {\r\n            return { ...widgetData, columnId: action.columnId }\r\n        }\r\n        return widgetData\r\n    });\r\n}\r\n\r\nexport default function () {\r\n    const [api, contextHolder] = notification.useNotification();\r\n\r\n    // вынести в джейсон\r\n    const [cities] = useState<DefaultOptionType[]>([\r\n        { value: 'Paris', label: 'Париж' },\r\n        { value: 'Smolensk', label: 'Смоленск' },\r\n        { value: 'HongKong', label: 'Гонконг' },\r\n    ]);\r\n\r\n    const [widgetDatas, dispatch] = useReducer(reducer, []);\r\n\r\n    const nextWidgetId = useRef<number>(0);\r\n\r\n    const [activeId, setActiveId] = useState(null);\r\n\r\n    const sensors = useSensors(\r\n        useSensor(PointerSensor, {\r\n            activationConstraint: {\r\n                distance: 8,\r\n            },\r\n        })\r\n    );\r\n\r\n    const onAdditionButtonClick = useCallback(() => {\r\n        nextWidgetId.current = nextWidgetId.current + 1;\r\n        // брать начальное значение из джейсон \r\n        const activeCityValue = cities.length > 0 ? String(cities[0].value) : undefined;\r\n        if (!activeCityValue) {\r\n            return;\r\n        }\r\n        dispatch({\r\n            type: 'addNew',\r\n            id: nextWidgetId.current,\r\n            activeCityValue,\r\n        });\r\n    }, [cities, dispatch]);\r\n\r\n    const weaterWidgetHandlers = useMemo(() => {\r\n        return reduce<IWidgetData, { [key: number]: IWeaterWidgetHandlers }>(widgetDatas, (result, widgetData) => {\r\n            result[widgetData.id] = {\r\n                setActiveCityValue: (activeCityValue: string) => {\r\n                    dispatch({\r\n                        type: 'setActiveCityValue',\r\n                        activeCityValue,\r\n                        id: widgetData.id,\r\n                    });\r\n                },\r\n                setIsTempatureUnitC: (isTempatureUnitC: boolean) => {\r\n                    dispatch({\r\n                        type: 'setIsTempatureUnitC',\r\n                        isTempatureUnitC,\r\n                        id: widgetData.id,\r\n                    });\r\n                }\r\n            };\r\n            return result;\r\n        }, {});\r\n    }, [dispatch, widgetDatas]);\r\n\r\n    return (\r\n        <>\r\n            <DndContext onDragStart={handleDragStart} onDragEnd={handleDragEnd} sensors={sensors}>\r\n                <ConfigProvider locale={ruRU}>\r\n                    {contextHolder}\r\n                    <div className={styles.main}>\r\n                        <Button\r\n                            className={styles.addButton}\r\n                            type=\"primary\"\r\n                            shape=\"circle\"\r\n                            icon={<PlusOutlined />}\r\n                            ghost\r\n                            onClick={onAdditionButtonClick}\r\n                        />\r\n                        <Row gutter={16} className={styles.row}>\r\n                            {map([1, 2, 3], (columnId) => (\r\n                                <Column key={columnId} id={columnId}>\r\n                                    {map(filter(widgetDatas, ['columnId', columnId]), ({ id, activeCityValue, isTempatureUnitC }) => (\r\n                                        <WeatherWidget\r\n                                            cities={cities}\r\n                                            api={api} id={id}\r\n                                            key={id}\r\n                                            activeCityValue={activeCityValue}\r\n                                            isTempatureUnitC={isTempatureUnitC}\r\n                                            setActiveCityValue={weaterWidgetHandlers[id].setActiveCityValue}\r\n                                            setIsTempatureUnitC={weaterWidgetHandlers[id].setIsTempatureUnitC}\r\n                                        />\r\n                                    ))}\r\n                                </Column>\r\n                            ))}\r\n                        </Row>\r\n                    </div>\r\n                    <DragOverlay>\r\n                        {activeId ? (\r\n                            map(filter(widgetDatas, ['id', activeId]), ({ id, activeCityValue, isTempatureUnitC }) => (\r\n                                <WeatherWidget\r\n                                    cities={cities}\r\n                                    api={api} id={id}\r\n                                    key={id}\r\n                                    activeCityValue={activeCityValue}\r\n                                    isTempatureUnitC={isTempatureUnitC}\r\n                                    setActiveCityValue={noop}\r\n                                    setIsTempatureUnitC={noop}\r\n                                />\r\n                            ))\r\n                        ) : null}\r\n                    </DragOverlay>\r\n                </ConfigProvider>\r\n            </DndContext>\r\n        </>\r\n    );\r\n\r\n    // мб переделать\r\n    function handleDragStart(event) {\r\n        setActiveId(event.active.id);\r\n    }\r\n\r\n    function handleDragEnd(event) {\r\n        setActiveId(null);\r\n        if (event.active && event.active.id && event.over && event.over.id) {\r\n            dispatch({\r\n                type: 'setColimnId',\r\n                id: event.active.id,\r\n                columnId: event.over.id,\r\n\r\n            });\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Space, Col, theme } from 'antd';\r\nimport { useDroppable } from '@dnd-kit/core';\r\nimport styles from './index.less';\r\n\r\nconst { useToken } = theme;\r\n\r\nexport default function ({ children, id }: React.PropsWithChildren<{ id: number }>) {\r\n    const { isOver, setNodeRef } = useDroppable({\r\n        id,\r\n    });\r\n\r\n    const { token } = useToken();\r\n\r\n    const style = {\r\n        borderColor: isOver ? token.colorPrimary : token.colorBgBase,\r\n    };\r\n\r\n    return (\r\n        <Col\r\n            className={styles.col}\r\n            span={8}\r\n            ref={setNodeRef}\r\n            style={style}\r\n        >\r\n            <Space\r\n                className={styles.space}\r\n                direction=\"vertical\"\r\n            >\r\n                {children}\r\n            </Space>\r\n        </Col>\r\n    );\r\n}","import React from 'react';\r\nimport { IWeather } from '../..';\r\nimport styles from './index.less';\r\n\r\ninterface IProps {\r\n    weather: IWeather,\r\n    isDay: boolean,\r\n    isTempatureUnitC: boolean,\r\n    cityName: React.ReactNode,\r\n}\r\n\r\nexport default ({ weather, isDay, isTempatureUnitC, cityName }: IProps) => {\r\n    return (\r\n        <>\r\n            <div className={styles.cityName}>{cityName}</div>\r\n            <img className={styles.conditionIcon}\r\n                alt=\"погодные условия\"\r\n                src={weather.conditionIconSrc}\r\n            />\r\n            <h2 className={styles.tempature}>\r\n                {\r\n                    isTempatureUnitC\r\n                        ? weather.feelsLikeC\r\n                        : weather.feelsLikeF\r\n                }°{\r\n                    isTempatureUnitC\r\n                        ? 'C'\r\n                        : 'F'\r\n                }\r\n            </h2>\r\n            <div>{weather.conditionText[isDay ? 'day' : 'night']}</div>\r\n            <div>Влажность: {weather.humidity}%</div>\r\n            <div>Ветер: {weather.wind} м/с</div>\r\n        </>\r\n    );\r\n}","\r\nimport React from 'react';\r\nimport { Button, Tooltip } from 'antd';\r\nimport {\r\n    SettingOutlined,\r\n    CloseOutlined\r\n} from '@ant-design/icons';\r\nimport classnames from 'classnames';\r\nimport styles from './index.less';\r\n\r\ninterface IProps {\r\n    className?: string,\r\n    isSettingMode: boolean,\r\n    onClick?(): void,\r\n}\r\n\r\nexport default function ({\r\n    className: customClassName,\r\n    onClick,\r\n    isSettingMode\r\n}: React.PropsWithChildren<IProps>) {\r\n    const className = classnames(\r\n        styles.button,\r\n        { ...(customClassName ? { [customClassName]: true } : {}) }\r\n    );\r\n\r\n    return (\r\n        <Tooltip title=\"настройки\">\r\n            <Button\r\n                className={className}\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                icon={isSettingMode ? <CloseOutlined /> : <SettingOutlined />}\r\n                ghost\r\n                onClick={onClick}\r\n            />\r\n        </Tooltip>\r\n    );\r\n}","\r\nimport React from 'react';\r\nimport { Radio, Space, Select, theme } from 'antd';\r\nimport { DefaultOptionType } from 'antd/es/select';\r\nimport classnames from 'classnames';\r\nimport styles from './index.less';\r\n\r\nconst { useToken } = theme;\r\n\r\ninterface IProps {\r\n    className?: string,\r\n    isTempatureUnitC: boolean,\r\n    setIsTempatureUnitC(isSettisTempatureUnitCingMode: boolean): void,\r\n    cities: DefaultOptionType[],\r\n    activeCityValue?: string,\r\n    onCityChange(value: string): void,\r\n}\r\n\r\nconst spaceClassNames = {\r\n    item: styles.item,\r\n};\r\n\r\nexport default function ({\r\n    className: customClassName,\r\n    isTempatureUnitC,\r\n    setIsTempatureUnitC,\r\n    cities,\r\n    onCityChange,\r\n    activeCityValue\r\n}: React.PropsWithChildren<IProps>) {\r\n    const className = classnames(\r\n        styles.settings,\r\n        { ...(customClassName ? { [customClassName]: true } : {}) }\r\n    );\r\n\r\n    const { token } = useToken();\r\n\r\n    return (\r\n        <Space\r\n            className={className}\r\n            direction=\"vertical\"\r\n            size=\"small\"\r\n            classNames={spaceClassNames}\r\n            style={{ 'backgroundColor': token.colorBgBase  }}\r\n        >\r\n            <Radio.Group\r\n                value={isTempatureUnitC}\r\n                onChange={(e) => {\r\n                    setIsTempatureUnitC(e.target.value)\r\n                }}\r\n            >\r\n                <Radio.Button value={true}>°C</Radio.Button>\r\n                <Radio.Button value={false}>°F</Radio.Button>\r\n            </Radio.Group>\r\n            <Select\r\n                value={activeCityValue}\r\n                className={styles.citySelect}\r\n                onChange={onCityChange}\r\n                options={cities}\r\n            />\r\n        </Space>\r\n    );\r\n}","import React, { useEffect } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport find from 'lodash/find';\r\nimport { NotificationInstance } from 'antd/es/notification/interface';\r\nimport { DefaultOptionType } from 'antd/es/select';\r\nimport { IWeather } from '..';\r\nimport conditions from '../assets/conditions.json';\r\n\r\n// добавить таймаут обновления\r\nconst getCurrentWeatherURL = (cityName: string, weatherAPIKey: string) => `http://api.weatherapi.com/v1/current.json?q=${cityName}&key=${weatherAPIKey}`;\r\n\r\ninterface IProps {\r\n    activeCity?: DefaultOptionType,\r\n    weatherAPIKey: string,\r\n    setWeather(weather: IWeather | null): void,\r\n    api: NotificationInstance\r\n}\r\n\r\nexport default ({ activeCity, setWeather, api, weatherAPIKey }: IProps) => {\r\n    useEffect(() => {\r\n        let isActive = true;\r\n        if (activeCity) {\r\n            (async () => {\r\n                try {\r\n                    const response = await fetch(getCurrentWeatherURL(String(activeCity.value), weatherAPIKey))\r\n                    const body = await response.json()\r\n                    if (!body?.current) {\r\n                        throw new Error();\r\n                    }\r\n\r\n                    const condition = find(conditions, ['code', body.current.condition.code]);\r\n                    if (!condition) {\r\n                        throw new Error();\r\n                    }\r\n\r\n                    const localizedConditionTexts = find(condition.languages, ['lang_iso', 'ru']);\r\n                    if (!localizedConditionTexts) {\r\n                        throw new Error();\r\n                    }\r\n\r\n                    const iconSrc = (await import('../assets/day/' + condition.icon + '.png'))?.default;\r\n                    if (isActive) {\r\n                        setWeather({\r\n                            feelsLikeC: body.current.feelslike_c,\r\n                            feelsLikeF: body.current.feelslike_f,\r\n                            humidity: body.current.humidity,\r\n                            wind: body.current.wind_kph,\r\n                            localtime: dayjs(body.location.localtime),\r\n                            conditionIconSrc: iconSrc,\r\n                            conditionText: {\r\n                                day: localizedConditionTexts.day_text,\r\n                                night: localizedConditionTexts.night_text\r\n                            },\r\n                        });\r\n                    }\r\n\r\n                } catch (e) {\r\n                    api.error({ message: `Возникла ошибка при получении данных о погоде в городе \"${activeCity.label}\"` })\r\n                    if (isActive) {\r\n                        setWeather(null);\r\n                    }\r\n                }\r\n            })();\r\n        }\r\n        return () => {\r\n            isActive = false;\r\n        }\r\n    }, [activeCity, api.error]);\r\n}","import React, { useState } from 'react';\r\nimport dayjs from 'dayjs';\r\nimport { Card, ConfigProvider, theme } from 'antd';\r\nimport { NotificationInstance } from 'antd/es/notification/interface';\r\nimport classnames from 'classnames';\r\nimport find from 'lodash/find';\r\nimport ruRU from 'antd/locale/ru_RU';\r\nimport { useDraggable } from '@dnd-kit/core';\r\nimport { DefaultOptionType } from 'antd/es/select';\r\nimport Body from './components/Body';\r\nimport SettingsButton from './components/SettingsButton';\r\nimport Settings from './components/Settings';\r\nimport useFetchWeather from './hooks/useFetchWeather';\r\nimport styles from './index.less';\r\n\r\nconst { useToken } = theme;\r\n\r\nexport interface IWeather {\r\n    feelsLikeC: number,\r\n    feelsLikeF: number,\r\n    humidity: number,\r\n    wind: number,\r\n    localtime: dayjs.Dayjs,\r\n    conditionIconSrc: string,\r\n    conditionText: { day: string, night: string },\r\n}\r\n\r\ninterface IProps {\r\n    api: NotificationInstance,\r\n    id: number,\r\n    activeCityValue: string | undefined,\r\n    isTempatureUnitC: boolean,\r\n    setIsTempatureUnitC(isSettisTempatureUnitCingMode: boolean): void,\r\n    setActiveCityValue(activeCityValue: string | undefined): void,\r\n    cities: DefaultOptionType[],\r\n}\r\n\r\n// вынести в джейсон\r\nexport const weatherAPIKey = 'b3d3cc323bfb484f809170534240603';\r\n\r\nexport default ({\r\n    api,\r\n    id,\r\n    activeCityValue,\r\n    isTempatureUnitC,\r\n    setIsTempatureUnitC,\r\n    setActiveCityValue,\r\n    cities\r\n}: IProps) => {\r\n    const [isSettingMode, setIsSettingMode] = useState<boolean>(false);\r\n\r\n    const [weather, setWeather] = useState<IWeather | null>(null);\r\n\r\n    const activeCity = find(cities, ['value', activeCityValue])\r\n\r\n    useFetchWeather({\r\n        weatherAPIKey,\r\n        activeCity,\r\n        setWeather,\r\n        api\r\n    });\r\n\r\n    const localHour = weather\r\n        ? weather.localtime.hour()\r\n        : 0;\r\n\r\n    const isDay = weather\r\n        ? localHour >= 6 && localHour < 22\r\n        : true;\r\n\r\n    const cardClassName = classnames(\r\n        styles.card,\r\n        { [isDay ? styles.day : styles.night]: weather && !isSettingMode }\r\n    );\r\n\r\n    const { token } = useToken();\r\n\r\n    const { attributes, listeners, setNodeRef, transform } = useDraggable({ id });\r\n\r\n    const style = transform ? {\r\n        zIndex: 100,\r\n        transform: `translate3d(${transform.x}px, ${transform.y}px, 0)`,\r\n    } : undefined;\r\n\r\n    // скелет если нет города или погоды\r\n    return weather && activeCity && (\r\n        <ConfigProvider\r\n            locale={ruRU}\r\n            theme={{\r\n                token: isDay\r\n                    ? {}\r\n                    : {\r\n                        colorTextBase: token.colorBgBase,\r\n                    },\r\n            }}\r\n        >\r\n            <Card className={cardClassName} size=\"small\" ref={setNodeRef} style={style} {...listeners} {...attributes}>\r\n                <Body\r\n                    isTempatureUnitC={isTempatureUnitC}\r\n                    isDay={isDay}\r\n                    weather={weather}\r\n                    cityName={activeCity.label}\r\n                />\r\n                {isSettingMode && (\r\n                    <ConfigProvider\r\n                        locale={ruRU}\r\n                        theme={{\r\n                            token: {\r\n                                colorTextBase: token.colorTextBase,\r\n                            },\r\n                        }}\r\n                    >\r\n                        <Settings\r\n                            className={styles.settings}\r\n                            isTempatureUnitC={isTempatureUnitC}\r\n                            setIsTempatureUnitC={setIsTempatureUnitC}\r\n                            cities={cities}\r\n                            activeCityValue={activeCityValue}\r\n                            onCityChange={setActiveCityValue}\r\n                        />\r\n                    </ConfigProvider>\r\n                )}\r\n                <SettingsButton\r\n                    className={styles.settingsButton}\r\n                    isSettingMode={isSettingMode}\r\n                    onClick={() => {\r\n                        setIsSettingMode(isOldSettingMode => !isOldSettingMode)\r\n                    }}\r\n                />\r\n            </Card>\r\n        </ConfigProvider>\r\n    );\r\n}","import { createRoot } from 'react-dom/client';\r\nimport App from './App';\r\nimport './index.less';\r\n\r\nlet domNode = document.getElementById('root');\r\n\r\nif (!domNode) {\r\n    domNode = document.createElement('div');\r\n    domNode.id = 'root';\r\n    document.body.appendChild(domNode);\r\n}\r\n\r\nconst root = createRoot(domNode);\r\nroot.render(<App />);","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"i4JUY1kmcIJXbewaPiTs\",\"addButton\":\"Q_KChM4YLIcQvBDKh6r7\",\"row\":\"pGTbc6zMTXZlNmzPbbza\"};","// extracted by mini-css-extract-plugin\nexport default {\"col\":\"K8Cd22jfCRsni7oiKyjg\",\"space\":\"fZHMX3RV663MgXKhDaWo\"};","// extracted by mini-css-extract-plugin\nexport default {\"cityName\":\"C04ksiAazI5d0FxyiA_J\",\"tempature\":\"l9557CPeDPN0wY1i9Q4T\",\"conditionIcon\":\"y5Ap27t_kXnDc33vWGjg\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"XFQXz30JLdwrbmNazhqv\"};","// extracted by mini-css-extract-plugin\nexport default {\"settings\":\"B2cneReRvVTkBawR3T9U\",\"item\":\"M8DeSTT3oQSEJd9trYkT\",\"citySelect\":\"okDk8kts6zo9lYm5pKsA\"};","// extracted by mini-css-extract-plugin\nexport default {\"card\":\"osJymh9q3igk7lhcDrUi\",\"day\":\"ZIxx7MOpOLAWHHoV9oGl\",\"night\":\"NSInktsBoKkmjuqD0kxR\",\"settings\":\"ENeQPVc6Yd8uJQUpuQO0\",\"settingsButton\":\"_SPQIhK6UUR9o5aRU7ZW\"};","// extracted by mini-css-extract-plugin\nexport default {};","var map = {\n\t\"./113.png\": [\n\t\t75811,\n\t\t\"src_components_WeatherWidget_assets_day_113_png\"\n\t],\n\t\"./116.png\": [\n\t\t47390,\n\t\t\"src_components_WeatherWidget_assets_day_116_png\"\n\t],\n\t\"./119.png\": [\n\t\t76297,\n\t\t\"src_components_WeatherWidget_assets_day_119_png\"\n\t],\n\t\"./122.png\": [\n\t\t83487,\n\t\t\"src_components_WeatherWidget_assets_day_122_png\"\n\t],\n\t\"./143.png\": [\n\t\t66196,\n\t\t\"src_components_WeatherWidget_assets_day_143_png\"\n\t],\n\t\"./176.png\": [\n\t\t49864,\n\t\t\"src_components_WeatherWidget_assets_day_176_png\"\n\t],\n\t\"./179.png\": [\n\t\t79711,\n\t\t\"src_components_WeatherWidget_assets_day_179_png\"\n\t],\n\t\"./182.png\": [\n\t\t89849,\n\t\t\"src_components_WeatherWidget_assets_day_182_png\"\n\t],\n\t\"./185.png\": [\n\t\t96774,\n\t\t\"src_components_WeatherWidget_assets_day_185_png\"\n\t],\n\t\"./200.png\": [\n\t\t52752,\n\t\t\"src_components_WeatherWidget_assets_day_200_png\"\n\t],\n\t\"./227.png\": [\n\t\t29989,\n\t\t\"src_components_WeatherWidget_assets_day_227_png\"\n\t],\n\t\"./230.png\": [\n\t\t16661,\n\t\t\"src_components_WeatherWidget_assets_day_230_png\"\n\t],\n\t\"./248.png\": [\n\t\t34756,\n\t\t\"src_components_WeatherWidget_assets_day_248_png\"\n\t],\n\t\"./260.png\": [\n\t\t71942,\n\t\t\"src_components_WeatherWidget_assets_day_260_png\"\n\t],\n\t\"./263.png\": [\n\t\t53149,\n\t\t\"src_components_WeatherWidget_assets_day_263_png\"\n\t],\n\t\"./266.png\": [\n\t\t68112,\n\t\t\"src_components_WeatherWidget_assets_day_266_png\"\n\t],\n\t\"./281.png\": [\n\t\t40705,\n\t\t\"src_components_WeatherWidget_assets_day_281_png\"\n\t],\n\t\"./284.png\": [\n\t\t17788,\n\t\t\"src_components_WeatherWidget_assets_day_284_png\"\n\t],\n\t\"./293.png\": [\n\t\t9672,\n\t\t\"src_components_WeatherWidget_assets_day_293_png\"\n\t],\n\t\"./296.png\": [\n\t\t22549,\n\t\t\"src_components_WeatherWidget_assets_day_296_png\"\n\t],\n\t\"./299.png\": [\n\t\t51698,\n\t\t\"src_components_WeatherWidget_assets_day_299_png\"\n\t],\n\t\"./302.png\": [\n\t\t93379,\n\t\t\"src_components_WeatherWidget_assets_day_302_png\"\n\t],\n\t\"./305.png\": [\n\t\t63212,\n\t\t\"src_components_WeatherWidget_assets_day_305_png\"\n\t],\n\t\"./308.png\": [\n\t\t93865,\n\t\t\"src_components_WeatherWidget_assets_day_308_png\"\n\t],\n\t\"./311.png\": [\n\t\t1055,\n\t\t\"src_components_WeatherWidget_assets_day_311_png\"\n\t],\n\t\"./314.png\": [\n\t\t48434,\n\t\t\"src_components_WeatherWidget_assets_day_314_png\"\n\t],\n\t\"./317.png\": [\n\t\t97225,\n\t\t\"src_components_WeatherWidget_assets_day_317_png\"\n\t],\n\t\"./320.png\": [\n\t\t47047,\n\t\t\"src_components_WeatherWidget_assets_day_320_png\"\n\t],\n\t\"./323.png\": [\n\t\t44396,\n\t\t\"src_components_WeatherWidget_assets_day_323_png\"\n\t],\n\t\"./326.png\": [\n\t\t61297,\n\t\t\"src_components_WeatherWidget_assets_day_326_png\"\n\t],\n\t\"./329.png\": [\n\t\t342,\n\t\t\"src_components_WeatherWidget_assets_day_329_png\"\n\t],\n\t\"./332.png\": [\n\t\t99982,\n\t\t\"src_components_WeatherWidget_assets_day_332_png\"\n\t],\n\t\"./335.png\": [\n\t\t98465,\n\t\t\"src_components_WeatherWidget_assets_day_335_png\"\n\t],\n\t\"./338.png\": [\n\t\t47028,\n\t\t\"src_components_WeatherWidget_assets_day_338_png\"\n\t],\n\t\"./350.png\": [\n\t\t46874,\n\t\t\"src_components_WeatherWidget_assets_day_350_png\"\n\t],\n\t\"./353.png\": [\n\t\t74014,\n\t\t\"src_components_WeatherWidget_assets_day_353_png\"\n\t],\n\t\"./356.png\": [\n\t\t34732,\n\t\t\"src_components_WeatherWidget_assets_day_356_png\"\n\t],\n\t\"./359.png\": [\n\t\t14619,\n\t\t\"src_components_WeatherWidget_assets_day_359_png\"\n\t],\n\t\"./362.png\": [\n\t\t58969,\n\t\t\"src_components_WeatherWidget_assets_day_362_png\"\n\t],\n\t\"./365.png\": [\n\t\t25926,\n\t\t\"src_components_WeatherWidget_assets_day_365_png\"\n\t],\n\t\"./368.png\": [\n\t\t69395,\n\t\t\"src_components_WeatherWidget_assets_day_368_png\"\n\t],\n\t\"./371.png\": [\n\t\t90313,\n\t\t\"src_components_WeatherWidget_assets_day_371_png\"\n\t],\n\t\"./374.png\": [\n\t\t8868,\n\t\t\"src_components_WeatherWidget_assets_day_374_png\"\n\t],\n\t\"./377.png\": [\n\t\t94143,\n\t\t\"src_components_WeatherWidget_assets_day_377_png\"\n\t],\n\t\"./386.png\": [\n\t\t78159,\n\t\t\"src_components_WeatherWidget_assets_day_386_png\"\n\t],\n\t\"./389.png\": [\n\t\t87000,\n\t\t\"src_components_WeatherWidget_assets_day_389_png\"\n\t],\n\t\"./392.png\": [\n\t\t72876,\n\t\t\"src_components_WeatherWidget_assets_day_392_png\"\n\t],\n\t\"./395.png\": [\n\t\t3043,\n\t\t\"src_components_WeatherWidget_assets_day_395_png\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__.t(id, 1 | 16);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 60096;\nmodule.exports = webpackAsyncContext;"],"names":["React","useState","useRef","useReducer","useCallback","useMemo","DndContext","DragOverlay","useSensors","useSensor","PointerSensor","ConfigProvider","notification","Row","Button","PlusOutlined","ruRU","map","filter","reduce","noop","Column","WeatherWidget","styles","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","reducer","state","action","type","concat","_toConsumableArray","id","isTempatureUnitC","columnId","activeCityValue","widgetData","_objectSpread","_notification$useNoti","useNotification","_notification$useNoti2","_slicedToArray","api","contextHolder","_useState","value","label","_useState2","cities","_useReducer","_useReducer2","widgetDatas","dispatch","nextWidgetId","_useState3","_useState4","activeId","setActiveId","sensors","activationConstraint","distance","onAdditionButtonClick","current","length","String","undefined","weaterWidgetHandlers","result","setActiveCityValue","setIsTempatureUnitC","children","onDragStart","handleDragStart","onDragEnd","handleDragEnd","locale","className","main","addButton","shape","icon","ghost","onClick","gutter","row","_ref","_ref2","event","active","over","Space","Col","theme","useDroppable","useToken","_useDroppable","isOver","setNodeRef","_useToken","token","style","borderColor","colorPrimary","colorBgBase","col","span","ref","space","direction","weather","isDay","cityName","conditionIcon","alt","src","conditionIconSrc","tempature","feelsLikeC","feelsLikeF","conditionText","humidity","wind","Tooltip","SettingOutlined","CloseOutlined","classnames","customClassName","isSettingMode","button","_defineProperty","title","Radio","Select","spaceClassNames","item","onCityChange","settings","size","classNames","Group","onChange","e","target","citySelect","options","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","gen","reject","_next","_throw","key","info","error","_asyncToGenerator","fn","self","args","arguments","apply","err","useEffect","dayjs","find","conditions","getCurrentWeatherURL","weatherAPIKey","activeCity","setWeather","isActive","_callee","_yield$import","response","body","condition","localizedConditionTexts","iconSrc","_callee$","_context","fetch","json","code","languages","t1","t0","t2","feelslike_c","feelslike_f","wind_kph","localtime","location","day","day_text","night","night_text","t3","message","Card","useDraggable","Body","SettingsButton","Settings","useFetchWeather","setIsSettingMode","localHour","hour","cardClassName","card","_useDraggable","attributes","listeners","transform","zIndex","x","colorTextBase","settingsButton","isOldSettingMode","createRoot","App","domNode","document","getElementById","createElement","appendChild","root","render"],"sourceRoot":""}